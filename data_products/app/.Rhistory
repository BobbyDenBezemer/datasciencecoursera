from <- "bobbydenbezemer@gmail.com"
to <- "bobbydenbezemer@gmail.com"
subject <- "Email Subject"
body <- "Email body."
mailControl=list(smtpServer="smtp.gmail.com")
library("sendmailR")
from <- "bobbydenbezemer@gmail.com"
to <- "bobbydenbezemer@gmail.com"
subject <- "Email Subject"
body <- "Email body."
mailControl=list(smtpServer="smtp.gmail.com")
sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
from <- "bobbydenbezemer@gmail.com"
to <- "bobbydenbezemer@gmail.com"
subject <- "Email Subject"
body <- "Email body."
mailControl=list(smtpServer="smtp.gmail.com")
sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
try(sendmail(from, to, subject, body, control=list(smtpServer="ASPMX.L.GOOGLE.COM")),
silent = TRUE)
try(sendmail(from, to, subject, body, control=list(smtpServer="ASPMX.L.GOOGLE.COM")),
silent = FALSE)
from <- "bobbydenbezemer@gmail.com"
to <- "bobbydenbezemer@gmail.com"
subject <- "Hello from R"
body <- list("It works!", mime_part(iris))
sendmail(from, to, subject, body,
control=list(smtpServer="ASPMX.L.GOOGLE.COM."))
email <- send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "<html>The apache logo - <img src=\"http://www.apache.org/images/asf_logo_wide.gif\"></html>",
html = TRUE,
smtp = list(host.name = "aspmx.l.google.com", port = 25),
authenticate = FALSE,
send = FALSE)
email <- sendmail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "<html>The apache logo - <img src=\"http://www.apache.org/images/asf_logo_wide.gif\"></html>",
html = TRUE,
smtp = list(host.name = "aspmx.l.google.com", port = 25),
authenticate = FALSE,
send = FALSE)
getwd()
attachmentPath <- "C:/Users/Bobby/Documents/final_project.md"
attachmentName <- "final_project.md"
attachmentObject <- mime_part(x=attachmentPath,name=attachmentName)
from <- "B.denbezemer@my-call.nl"
to <- "bobbydenbezemer@gmail.com"
subject <- "Email Subject"
body <- "Email body."
mailControl=list(smtpServer="smtp.office.com")
body <- "Email body."
sendmail(from=from,to=to,subject=subject,msg=bodyWithAttachment,control=mailControl)
mailControl=list(smtpServer="smtp.office365.com")
sendmail(from=from,to=to,subject=subject,msg=bodyWithAttachment,control=mailControl)
?mailControl
?sendmail
mailControl=list(smtpServer="smtp.office365.com",
port = 587)
sendmail(from=from,to=to,subject=subject,msg=bodyWithAttachment,control=mailControl)
libary(mailR)
library(mailR)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 587,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 587,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 25,
user.name = "bobbydenbezemer@gmail.com", passwd = "Montreal1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = FALSE),
authenticate = TRUE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 587,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 587,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = FALSE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!", ssl = TRUE),
authenticate = FALSE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!",
ssl = TRUE, isSSL = TRUE),
authenticate = FALSE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!",
ssl = TRUE, isSSL = TRUE),
authenticate = TRUE,
send = TRUE, debug = TRUE)
install.packages("RDCOMCLIENT")
install.packages("RDCOMClient")
library(RDCOMClient)
OutApp <- COMCreate("Outlook.Application")
outMail = OutApp$CreateItem(0)
from <- "B.denbezemer@my-call.nl"
to <- "bobbydenbezemer@gmail.com"
subject <- "Email Subject"
body <- "Email body."
mailControl=list(smtpServer="smtp.outlook365.com")
sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
mailControl=list(smtpServer="aspmx.l.google.com")
sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
getwd()
send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 25,
user.name = "bobbydenbezemer@gmail.com", passwd = "Montreal1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, attach.files = "C:/Users/Bobby/Documents/final_project.md")
send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 25,
user.name = "bobbydenbezemer@gmail.com", passwd = "Montreal1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, attach.files = "C:/Users/Bobby/Documents/final_project.rmd")
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!",
tsl = TRUE),
authenticate = TRUE,
send = TRUE, debug = TRUE)
send.mail(from = "B.denbezemer@my-call.nl",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.office365.com", port = 25,
user.name = "B.denbezemer@my-call.nl", passwd = "Mcgill1!",
tsl = TRUE, ssl = TRUE),
authenticate = TRUE,
send = TRUE, debug = TRUE)
getwd()
send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 25,
user.name = "bobbydenbezemer@gmail.com", passwd = "Montreal1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, attach.files = "C:/Users/Bobby/Documents/final_project.rmd")
library(rmarkdown)
render::("final_project.rmd", "all")
rmarkdown::render("final_project.rmd", "all")
library(knitr)
library(knitr)
library(mailR)
library(rmarkdown)
rmarkdown::render("final_project.rmd", "all")
send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 25,
user.name = "bobbydenbezemer@gmail.com", passwd = "Montreal1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, attach.files = "C:/Users/Bobby/Documents/final_project.pdf")
library(knitr)
library(mailR)
library(rmarkdown)
rmarkdown::render("final_project.rmd", "all")
send.mail(from = "bobbydenbezemer@gmail.com",
to = "bobbydenbezemer@gmail.com",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 25,
user.name = "bobbydenbezemer@gmail.com", passwd = "Montreal1!", ssl = TRUE),
authenticate = TRUE,
send = TRUE, attach.files = "C:/Users/Bobby/Documents/final_project.pdf")
gsub("library", "bin", .libPaths())
update.packages("rmarkdown")
update.packages("knitr")
update.packages()
y
library(devtools)
install_github("rmarkdown",user="rstudio")
install.packages("scales")
install.packages("scales")
?render
?rmarkdown::render
data(iris); library(ggplot2); library(caret)
table(iris$Species)
inTrain <- createDataPartition(y=iris$Species,
p=0.7, list = FALSE)
training <- iris[inTrain,]
testing <- iris[-inTrain,]
dim(training)
# plot everything
qplot(Petal.Width, Sepal.Width, colour = Species, data = training)
modFit <- train(Species ~., method="rpart", data = training)
print(modFit$finalModel)
plot(modFit$finalModel, uniform = TRUE,
main = "Classification Tree")
text(modFit$finalModel, use.n=TRUE, all=TRUE,cex=0.8)
# fancier plot with rattle package
library(rattle)
install.packages("rattle")
library(rattle)
library(rattle)
fancyRpartPlot(modFit$finalModel)
install.packages("rpart.plot")
library(rattle)
fancyRpartPlot(modFit$finalModel)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
inTrain <- createDataPartition(y=segmentationOriginal$Case,
p = 0.7, list = FALSE)
training <- segmentationOriginal[inTrain,]; testing <- segmentationOriginal[-inTrain,]
set.seed(125)
inTrain <- createDataPartition(y=segmentationOriginal$Case,
p = 0.7, list = FALSE)
training <- segmentationOriginal[inTrain,]; testing <- segmentationOriginal[-inTrain,]
modFit <- train(Case ~., data = training, method = "rpart")
fancyRpartPlot(modFit$finalModel)
set.seed(125)
inTrain <- createDataPartition(y=segmentationOriginal$Case,
p = 0.7, list = FALSE)
training <- segmentationOriginal[inTrain,]; testing <- segmentationOriginal[-inTrain,]
modFit <- train(Case ~., data = training, method = "rpart")
head(segmentationOriginal)
colnames(training)
library(pgmm)
data(olive)
olive = olive[,-1]
install.packages("pgmm")
library(pgmm)
data(olive)
olive = olive[,-1]
library(ElemStatLearn)
install.packages("ElemStatLearn")
lm
?match.call
?colSums
install.packages("shinydashboard")
install.packages("shiny")
library(shiny)
library(shinydashboard)
getwd()
setwd("C:/Users/Bobby/Documents/MOOCS")
setwd("./data products")
setwd("./"data products"")
setwd("C:/Users/Bobby/Documents/MOOCS/data products")
setwd("./data_products")
getwd()
setwd(./data_products)
setwd("./data_products")
setwd("C:/Users/Bobby/Documents/MOOCS/data_products")
setwd("C:/Users/Bobby/Documents/MOOCS")
setwd("C:/Users/Bobby/Documents/MOOCS/data_products")
setwd("C:/Users/Bobby/Documents/MOOCS/data_spec/data_products")
runApp("app")
runApp("app")
runApp("app")
runApp("app")
runApp("app")
runApp("app")
runApp("app")
getwd()
runApp("appDir = ./app")
setwd("./app")
runApp("app.R")
shinyApp(ui, server)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?plotOutput
shiny::runApp()
?hist
shiny::runApp()
shiny::runApp()
?tabBox
shiny::runApp()
shiny::runApp()
?plotOutput
shiny::runApp()
?sliderInput
shiny::runApp()
shiny::runApp()
